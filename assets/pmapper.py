import numpy as np
import plotly.graph_objects as go
import math
import pandas as pd

data = pd.read_csv('cubevase\Cube_vase.csv')
wingdata = pd.read_csv('wing_angle.csv')
basedata = pd.read_csv('base_angle.csv')
#
n = int(input("Muestra n√∫mero:  "))
distancias = data.iloc[n].to_numpy()
w_angle = np.array([1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,1000,1044,1088,1132,1176,1220,1264,1308,1352,1396,1440,1484,1528,1572,1616,1660,1704,1748,1792,1836,1880,1924,1968,2012,0])
b_angle = np.array([1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1132,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1220,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1264,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1308,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1352,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1396,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1440,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1484,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1528,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1572,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1660,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1748,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1792,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1836,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1880,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1924,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,1968,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,2012,0
])

def mapear_valor(valor_original, valor_min_original, valor_max_original, valor_min_nuevo, valor_max_nuevo):
    return (valor_original - valor_min_original) / (valor_max_original - valor_min_original) * (valor_max_nuevo - valor_min_nuevo) + valor_min_nuevo

w_angle = mapear_valor(w_angle, 500, 2500, 180, 0)
b_angle = mapear_valor(b_angle, 500, 2500, -90, 90)
x_d = []
y_d = []
z_d = []
for i in range(0, len(distancias)):
    yaw = math.radians(w_angle[i])
    pitch = math.radians(b_angle[i])
    pitch_90 = math.radians(b_angle[i]+90)
    x_d.append(distancias[i] * math.sin(yaw) * math.cos(pitch) + 30*math.cos(pitch_90))
    z_d.append(distancias[i] * math.sin(pitch) + 30*(-1+math.sin(pitch_90)))
    y_d.append(distancias[i] * math.cos(yaw) * math.cos(pitch))

fig = go.Figure(data=[go.Scatter3d(
    x=x_d,
    y=y_d,
    z=z_d,
    mode='markers',
    marker=dict(
        size=5,
        color='red',
    )
)])

fig.update_layout(scene=dict(
    xaxis_title='X',
    yaxis_title='Y',
    zaxis_title='Z'
))

fig.show()